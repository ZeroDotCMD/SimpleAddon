# Quick Start Macro
[gcode_macro QUICK_START]
description: "Quick Start Calibration"
gcode:
    RESPOND TYPE=command MSG="action:prompt_begin Quick Start Calibration"
    RESPOND TYPE=command MSG="action:prompt_text This will run the basic calibrations required to start using your K1 machine. Quick Start includes PID calibration for both the bed and hot end, as well as basic input shaping. Do not touch the machine during this process as it will render negative results."
    RESPOND TYPE=command MSG="action:prompt_text This process will take approximately 30 to 40 minutes and will automatically save the results and restart the machine once complete."
    RESPOND TYPE=command MSG="action:prompt_button Start Calibration |_QUICK_START"
    RESPOND TYPE=command MSG="action:prompt_footer_button Close|RESPOND TYPE=command MSG=action:prompt_end"
    RESPOND TYPE=command MSG="action:prompt_show"
    
    
[gcode_macro _QUICK_START]
gcode:
    RESPOND TYPE=command MSG="action:prompt_end"
    RESPOND TYPE=command MSG='Quick start - Starting Quick Start Calibration'
    RESPOND TYPE=command MSG='Quick start - PID tuning Bed at 65C'
    PID_CALIBRATE_BED BED_TEMP=65
    RESPOND TYPE=command MSG='Quick start - PID tuning Hotend at 230C'
    PID_CALIBRATE_HOTEND HOTEND_TEMP=230
    RESPOND TYPE=command MSG='Quick start - Homing printer for Shaper Calibration'
    G28
    SHAPER_CALIBRATE
    RESPOND TYPE=command MSG='------------- Quick Start Complete! -------------'
    RESPOND TYPE=command MSG='Quick start - Saving results. Machine will reboot'
    SAVE_CONFIG

# Big Tree Tech Eddy Calibration

[gcode_macro CALIBRATE_BTTEDDY]
description: "Complete each step on by one to calibrate your BTT Eddy"
gcode:
    RESPOND TYPE=command MSG="action:prompt_begin BTT Eddy Calibration"
    RESPOND TYPE=command MSG="action:prompt_text Follow each step exactly in this dialog window to calibrate your BTT Eddy. Make sure you do not miss or skip a step"
    RESPOND TYPE=command MSG="action:prompt_button Step 1 - HOME X Y |G28 X Y"
    RESPOND TYPE=command MSG="action:prompt_text Step 2 - Close this dialog window and enable Force Move in the printers webui tool section and move the bottom of the probe 20mm from the bed then return to Probe Calibrate once complete."
    RESPOND TYPE=command MSG="action:prompt_text Step 3 - This step will calibrate the Probe Drive Current. Once Drive Current is calibrated this dialog window will close and klipper will save the changes. Return here once complete"
    RESPOND TYPE=command MSG="action:prompt_button Calibrate Probe Drive Current |_EDDY_DRIVE_CALIBRATE"
    RESPOND TYPE=command MSG="action:prompt_text Step 4 - Close this dialog window and enable Force Move in the printers webui tool section. Move the nozzle to where it is 2mm from the bed. Once complete return to Probe Calibrate"  
    RESPOND TYPE=command MSG="action:prompt_text Step 5 - Calibrate Probe Current - This will open a new dialog window to preform a paper/feeler gauge test. Note the tool head will do several z steps after hitting accept, this is the probe calibrating. This is the last step. Once calibration is complete make sure to save the final changes by pressing the save and restart button at the top of the webui."
    RESPOND TYPE=command MSG="action:prompt_button Calibrate Probe Current |_EDDY_CURRENT_CALIBRATE"    
    RESPOND TYPE=command MSG="action:prompt_footer_button Close|RESPOND TYPE=command MSG=action:prompt_end"
    RESPOND TYPE=command MSG="action:prompt_show"

[gcode_macro _EDDY_DRIVE_CALIBRATE]
gcode:
    RESPOND TYPE=command MSG="action:prompt_end"
    LDC_CALIBRATE_DRIVE_CURRENT CHIP=btt_eddy
    SAVE_CONFIG

[gcode_macro _EDDY_CURRENT_CALIBRATE]
gcode:
    RESPOND TYPE=command MSG="action:prompt_end"
    G28 X Y
    PROBE_EDDY_CURRENT_CALIBRATE CHIP=btt_eddy



# Save Z Offset from Guilouz - Creality-Helper-Script

[save_variables]
filename: /usr/data/printer_data/config/variables.cfg

[respond]

[gcode_macro SET_GCODE_OFFSET]
description: Saving Z-Offset
rename_existing: _SET_GCODE_OFFSET
gcode:
  {% if printer.save_variables.variables.zoffset %}
    {% set zoffset = printer.save_variables.variables.zoffset %}
  {% else %}
    {% set zoffset = {'z': None} %}
  {% endif %}
  {% set ns = namespace(zoffset={'z': zoffset.z}) %}
  _SET_GCODE_OFFSET {% for p in params %}{'%s=%s '% (p, params[p])}{% endfor %}
  {%if 'Z' in params %}
    {% set null = ns.zoffset.update({'z': params.Z}) %}
  {% endif %}
  {%if 'Z_ADJUST' in params %}
    {%if ns.zoffset.z == None %}
      {% set null = ns.zoffset.update({'z': 0}) %}
    {% endif %}
    {% set null = ns.zoffset.update({'z': (ns.zoffset.z | float) + (params.Z_ADJUST | float)}) %}
  {% endif %}
  SAVE_VARIABLE VARIABLE=zoffset VALUE="{ns.zoffset}"

[delayed_gcode LOAD_GCODE_OFFSETS]
initial_duration: 2
gcode:
  {% if printer.save_variables.variables.zoffset %}
    {% set zoffset = printer.save_variables.variables.zoffset %}
    _SET_GCODE_OFFSET {% for axis, offset in zoffset.items() if zoffset[axis] %}{ "%s=%s " % (axis, offset) }{% endfor %}
    RESPOND TYPE=command MSG="Loaded Z-Offset from variables.cfg: {zoffset.z}mm"
  {% endif %}
  
